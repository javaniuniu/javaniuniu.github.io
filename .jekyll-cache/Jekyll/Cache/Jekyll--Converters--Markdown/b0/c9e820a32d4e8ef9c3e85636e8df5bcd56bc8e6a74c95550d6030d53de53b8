I"e<h2 id="题目-56-合并区间">题目 <a href="https://leetcode-cn.com/problems/merge-intervals/">56. 合并区间</a></h2>

<h2 id="示例">示例</h2>
<h3 id="示例-1">示例 1:</h3>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>输入: [[1,3],[2,6],[8,10],[15,18]]
输出: [[1,6],[8,10],[15,18]]
解释: 区间 [1,3] 和 [2,6] 重叠, 将它们合并为 [1,6].
</code></pre></div></div>
<h3 id="示例2">示例 2:</h3>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>输入: [[1,4],[4,5]]
输出: [[1,5]]
解释: 区间 [1,4] 和 [4,5] 可被视为重叠区间。
</code></pre></div></div>

<h2 id="思路">思路</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span><span class="o">[][]</span> <span class="nf">merge</span><span class="o">(</span><span class="kt">int</span><span class="o">[][]</span> <span class="n">intervals</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// 先按照区间起始位置排序</span>
        <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">intervals</span><span class="o">,</span> <span class="o">(</span><span class="n">v1</span><span class="o">,</span> <span class="n">v2</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">v1</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">-</span> <span class="n">v2</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
        <span class="c1">// 遍历区间</span>
        <span class="kt">int</span><span class="o">[][]</span> <span class="n">res</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">intervals</span><span class="o">.</span><span class="na">length</span><span class="o">][</span><span class="mi">2</span><span class="o">];</span>
        <span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="nl">interval:</span> <span class="n">intervals</span><span class="o">)</span> <span class="o">{</span>
            <span class="c1">// 如果结果数组是空的，或者当前区间的起始位置 &gt; 结果数组中最后区间的终止位置，</span>
            <span class="c1">// 则不合并，直接将当前区间加入结果数组。</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">idx</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span> <span class="o">||</span> <span class="n">interval</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">&gt;</span> <span class="n">res</span><span class="o">[</span><span class="n">idx</span><span class="o">][</span><span class="mi">1</span><span class="o">])</span> <span class="o">{</span>
                <span class="n">res</span><span class="o">[++</span><span class="n">idx</span><span class="o">]</span> <span class="o">=</span> <span class="n">interval</span><span class="o">;</span>
            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                <span class="c1">// 反之将当前区间合并至结果数组的最后区间</span>
                <span class="n">res</span><span class="o">[</span><span class="n">idx</span><span class="o">][</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">res</span><span class="o">[</span><span class="n">idx</span><span class="o">][</span><span class="mi">1</span><span class="o">],</span> <span class="n">interval</span><span class="o">[</span><span class="mi">1</span><span class="o">]);</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">copyOf</span><span class="o">(</span><span class="n">res</span><span class="o">,</span> <span class="n">idx</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h2 id="知识点">知识点</h2>
<ul>
  <li><a href="https://blog.csdn.net/qq_37786775/article/details/97821671">java 使用Arrays对二维数组个性化排序</a>
    <ul>
      <li>Arrays.sort(people, Comparator.comparingInt(o -&gt; o[0]));  按照index0 排序</li>
      <li>Arrays.sort(people, Comparator.comparingInt(o -&gt; o[1]));  按照index1 排序</li>
    </ul>
  </li>
  <li><a href="https://blog.csdn.net/qq_25131363/article/details/85001414">Arrays.copyOf() 用法</a></li>
</ul>
:ET