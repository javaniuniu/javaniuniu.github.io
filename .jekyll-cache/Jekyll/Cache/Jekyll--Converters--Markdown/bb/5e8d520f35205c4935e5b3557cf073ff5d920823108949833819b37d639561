I"“O<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="n">sc</span><span class="o">.</span><span class="na">whorl</span><span class="o">.</span><span class="na">system</span><span class="o">.</span><span class="na">commons</span><span class="o">.</span><span class="na">aspect</span><span class="o">.</span><span class="na">weblog</span><span class="o">;</span>


<span class="kn">import</span> <span class="nn">net.logstash.logback.marker.Markers</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.aspectj.lang.JoinPoint</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.aspectj.lang.ProceedingJoinPoint</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.aspectj.lang.Signature</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.aspectj.lang.annotation.AfterReturning</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.aspectj.lang.annotation.Around</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.aspectj.lang.annotation.Aspect</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.aspectj.lang.annotation.Before</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.aspectj.lang.annotation.Pointcut</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.aspectj.lang.reflect.MethodSignature</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.slf4j.Logger</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.slf4j.LoggerFactory</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.core.annotation.Order</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.stereotype.Component</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.util.StringUtils</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RequestBody</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.web.bind.annotation.RequestParam</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.web.context.request.RequestContextHolder</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.web.context.request.ServletRequestAttributes</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.lang.reflect.Method</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.lang.reflect.Parameter</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">io.swagger.annotations.ApiOperation</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">sc.whorl.system.utils.mapper.JsonMapper</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">sc.whorl.system.utils.rest.RequestUtil</span><span class="o">;</span>

<span class="cm">/**
 * Áªü‰∏ÄÊó•ÂøóÂ§ÑÁêÜÂàáÈù¢
 */</span>
<span class="nd">@Aspect</span>
<span class="nd">@Component</span>
<span class="c1">//‰∏∫‰∫ÜÁªüËÆ°ÊâßË°åÊó∂Èó¥</span>
<span class="nd">@Order</span><span class="o">(</span><span class="mi">1</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">WebLogAspect</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">Logger</span> <span class="no">LOGGER</span> <span class="o">=</span> <span class="nc">LoggerFactory</span><span class="o">.</span><span class="na">getLogger</span><span class="o">(</span><span class="nc">WebLogAspect</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
    <span class="kd">private</span> <span class="nc">ThreadLocal</span><span class="o">&lt;</span><span class="nc">Long</span><span class="o">&gt;</span> <span class="n">startTime</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ThreadLocal</span><span class="o">&lt;&gt;();</span>

    <span class="nd">@Pointcut</span><span class="o">(</span><span class="s">"execution(public * sc.whorl.web.*.*(..))"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">webLog</span><span class="o">()</span> <span class="o">{</span>
    <span class="o">}</span>

    <span class="nd">@Before</span><span class="o">(</span><span class="s">"webLog()"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">doBefore</span><span class="o">(</span><span class="nc">JoinPoint</span> <span class="n">joinPoint</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Throwable</span> <span class="o">{</span>
        <span class="n">startTime</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">());</span>
    <span class="o">}</span>

    <span class="nd">@AfterReturning</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"webLog()"</span><span class="o">,</span> <span class="n">returning</span> <span class="o">=</span> <span class="s">"ret"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">doAfterReturning</span><span class="o">(</span><span class="nc">Object</span> <span class="n">ret</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Throwable</span> <span class="o">{</span>
    <span class="o">}</span>

    <span class="nd">@Around</span><span class="o">(</span><span class="s">"webLog()"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">Object</span> <span class="nf">doAround</span><span class="o">(</span><span class="nc">ProceedingJoinPoint</span> <span class="n">joinPoint</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Throwable</span> <span class="o">{</span>
        <span class="c1">//Ëé∑ÂèñÂΩìÂâçËØ∑Ê±ÇÂØπË±°</span>
        <span class="nc">ServletRequestAttributes</span> <span class="n">attributes</span> <span class="o">=</span> <span class="o">(</span><span class="nc">ServletRequestAttributes</span><span class="o">)</span> <span class="nc">RequestContextHolder</span><span class="o">.</span><span class="na">getRequestAttributes</span><span class="o">();</span>
        <span class="nc">HttpServletRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="n">attributes</span><span class="o">.</span><span class="na">getRequest</span><span class="o">();</span>
        <span class="c1">//ËÆ∞ÂΩïËØ∑Ê±Ç‰ø°ÊÅØ(ÈÄöËøálogstash‰º†ÂÖ•elasticsearch)</span>
        <span class="nc">WebLog</span> <span class="n">webLog</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">WebLog</span><span class="o">();</span>
        <span class="nc">Object</span> <span class="n">result</span> <span class="o">=</span> <span class="n">joinPoint</span><span class="o">.</span><span class="na">proceed</span><span class="o">();</span>
        <span class="nc">Signature</span> <span class="n">signature</span> <span class="o">=</span> <span class="n">joinPoint</span><span class="o">.</span><span class="na">getSignature</span><span class="o">();</span>
        <span class="nc">MethodSignature</span> <span class="n">methodSignature</span> <span class="o">=</span> <span class="o">(</span><span class="nc">MethodSignature</span><span class="o">)</span> <span class="n">signature</span><span class="o">;</span>
        <span class="nc">Method</span> <span class="n">method</span> <span class="o">=</span> <span class="n">methodSignature</span><span class="o">.</span><span class="na">getMethod</span><span class="o">();</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">method</span><span class="o">.</span><span class="na">isAnnotationPresent</span><span class="o">(</span><span class="nc">ApiOperation</span><span class="o">.</span><span class="na">class</span><span class="o">))</span> <span class="o">{</span>
            <span class="nc">ApiOperation</span> <span class="n">log</span> <span class="o">=</span> <span class="n">method</span><span class="o">.</span><span class="na">getAnnotation</span><span class="o">(</span><span class="nc">ApiOperation</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
            <span class="n">webLog</span><span class="o">.</span><span class="na">setDescription</span><span class="o">(</span><span class="n">log</span><span class="o">.</span><span class="na">value</span><span class="o">());</span>
        <span class="o">}</span>
        <span class="kt">long</span> <span class="n">endTime</span> <span class="o">=</span> <span class="nc">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
        <span class="n">webLog</span><span class="o">.</span><span class="na">setBasePath</span><span class="o">(</span><span class="nc">RequestUtil</span><span class="o">.</span><span class="na">getBasePath</span><span class="o">(</span><span class="n">request</span><span class="o">));</span>
        <span class="n">webLog</span><span class="o">.</span><span class="na">setIp</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getRemoteUser</span><span class="o">());</span>
        <span class="n">webLog</span><span class="o">.</span><span class="na">setMethod</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getMethod</span><span class="o">());</span>
        <span class="n">webLog</span><span class="o">.</span><span class="na">setParameter</span><span class="o">(</span><span class="n">getParameter</span><span class="o">(</span><span class="n">method</span><span class="o">,</span> <span class="n">joinPoint</span><span class="o">.</span><span class="na">getArgs</span><span class="o">()));</span>
        <span class="n">webLog</span><span class="o">.</span><span class="na">setResult</span><span class="o">(</span><span class="n">result</span><span class="o">);</span>
        <span class="n">webLog</span><span class="o">.</span><span class="na">setSpendTime</span><span class="o">((</span><span class="kt">int</span><span class="o">)</span> <span class="o">(</span><span class="n">endTime</span> <span class="o">-</span> <span class="n">startTime</span><span class="o">.</span><span class="na">get</span><span class="o">()));</span>
        <span class="n">webLog</span><span class="o">.</span><span class="na">setStartTime</span><span class="o">(</span><span class="n">startTime</span><span class="o">.</span><span class="na">get</span><span class="o">());</span>
        <span class="n">webLog</span><span class="o">.</span><span class="na">setUri</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getRequestURI</span><span class="o">());</span>
        <span class="n">webLog</span><span class="o">.</span><span class="na">setUrl</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getRequestURL</span><span class="o">().</span><span class="na">toString</span><span class="o">());</span>
        <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span><span class="nc">Object</span><span class="o">&gt;</span> <span class="n">logMap</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
        <span class="n">logMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"url"</span><span class="o">,</span><span class="n">webLog</span><span class="o">.</span><span class="na">getUrl</span><span class="o">());</span>
        <span class="n">logMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"method"</span><span class="o">,</span><span class="n">webLog</span><span class="o">.</span><span class="na">getMethod</span><span class="o">());</span>
        <span class="n">logMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"parameter"</span><span class="o">,</span><span class="n">webLog</span><span class="o">.</span><span class="na">getParameter</span><span class="o">());</span>
        <span class="n">logMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"spendTime"</span><span class="o">,</span><span class="n">webLog</span><span class="o">.</span><span class="na">getSpendTime</span><span class="o">());</span>
        <span class="n">logMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"description"</span><span class="o">,</span><span class="n">webLog</span><span class="o">.</span><span class="na">getDescription</span><span class="o">());</span>
        <span class="c1">//        LOGGER.info("{}", JsonUtil.objectToJson(webLog));</span>
        <span class="no">LOGGER</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="nc">Markers</span><span class="o">.</span><span class="na">appendEntries</span><span class="o">(</span><span class="n">logMap</span><span class="o">),</span> <span class="nc">JsonMapper</span><span class="o">.</span><span class="na">nonDefaultMapper</span><span class="o">().</span><span class="na">toJson</span><span class="o">(</span><span class="n">webLog</span><span class="o">));</span>
        <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="cm">/**
     * Ê†πÊçÆÊñπÊ≥ïÂíå‰º†ÂÖ•ÁöÑÂèÇÊï∞Ëé∑ÂèñËØ∑Ê±ÇÂèÇÊï∞
     */</span>
    <span class="kd">private</span> <span class="nc">Object</span> <span class="nf">getParameter</span><span class="o">(</span><span class="nc">Method</span> <span class="n">method</span><span class="o">,</span> <span class="nc">Object</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Object</span><span class="o">&gt;</span> <span class="n">argList</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="nc">Parameter</span><span class="o">[]</span> <span class="n">parameters</span> <span class="o">=</span> <span class="n">method</span><span class="o">.</span><span class="na">getParameters</span><span class="o">();</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">parameters</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="nc">RequestBody</span> <span class="n">requestBody</span> <span class="o">=</span> <span class="n">parameters</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getAnnotation</span><span class="o">(</span><span class="nc">RequestBody</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">requestBody</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">argList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">args</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
            <span class="o">}</span>
            <span class="nc">RequestParam</span> <span class="n">requestParam</span> <span class="o">=</span> <span class="n">parameters</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getAnnotation</span><span class="o">(</span><span class="nc">RequestParam</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">requestParam</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">Object</span><span class="o">&gt;</span> <span class="n">map</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">&lt;&gt;();</span>
                <span class="nc">String</span> <span class="n">key</span> <span class="o">=</span> <span class="n">parameters</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="na">getName</span><span class="o">();</span>
                <span class="k">if</span> <span class="o">(!</span><span class="nc">StringUtils</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">(</span><span class="n">requestParam</span><span class="o">.</span><span class="na">value</span><span class="o">()))</span> <span class="o">{</span>
                    <span class="n">key</span> <span class="o">=</span> <span class="n">requestParam</span><span class="o">.</span><span class="na">value</span><span class="o">();</span>
                <span class="o">}</span>
                <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">key</span><span class="o">,</span> <span class="n">args</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
                <span class="n">argList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">map</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">argList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">argList</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">argList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">argList</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>
:ET