I"‘~<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="n">sc</span><span class="o">.</span><span class="na">whorl</span><span class="o">.</span><span class="na">logic</span><span class="o">.</span><span class="na">service</span><span class="o">.</span><span class="na">user</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.github.pagehelper.PageHelper</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.github.pagehelper.PageInfo</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Autowired</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.beans.factory.annotation.Value</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.security.authentication.AuthenticationManager</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.security.authentication.UsernamePasswordAuthenticationToken</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.security.core.Authentication</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.security.core.context.SecurityContextHolder</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.stereotype.Service</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.transaction.annotation.Transactional</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.util.ObjectUtils</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.web.context.WebApplicationContext</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.web.context.request.RequestContextHolder</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.web.context.request.ServletRequestAttributes</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.concurrent.TimeUnit</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.servlet.ServletContext</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">lombok.extern.slf4j.Slf4j</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">sc.whorl.logic.domain.dao.auth.UserMapper</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">sc.whorl.logic.domain.model.auth.User</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">sc.whorl.logic.domain.model.auth.UserRole</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">sc.whorl.system.commons.MsgResponseBody</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">sc.whorl.system.commons.PageResponse</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">sc.whorl.system.commons.SenUnitDic</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">sc.whorl.system.commons.SenUnitException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">sc.whorl.system.commons.base.BaseService</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">sc.whorl.system.commons.lock.RedisLock</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">sc.whorl.system.config.jwt.JWTUserDetail</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">sc.whorl.system.config.jwt.JwtTokenUtil</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">sc.whorl.system.config.springsecurity.utils.ErrorCodeEnum</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">sc.whorl.system.config.springsecurity.utils.UserAuthInfoUtils</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">sc.whorl.system.utils.ScUtils</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">sc.whorl.system.utils.redis.RedisUtil</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">sc.whorl.system.utils.spring.SpringUtil</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">sc.whorl.web.vo.system.UserListQueryRequest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">sc.whorl.web.vo.user.UserVo</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">tk.mybatis.mapper.entity.Example</span><span class="o">;</span>

<span class="cm">/**
 * &lt;‰∏ÄÂè•ËØùÂäüËÉΩÁÆÄËø∞&gt; &lt;ÂäüËÉΩËØ¶ÁªÜÊèèËø∞&gt;
 *
 * @see: [Áõ∏ÂÖ≥Á±ª/ÊñπÊ≥ï]ÔºàÂèØÈÄâÔºâ
 * @since [‰∫ßÂìÅ/Ê®°ÂùóÁâàÊú¨] ÔºàÂèØÈÄâÔºâ
 */</span>
<span class="nd">@Service</span>
<span class="nd">@Slf4j</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">UserService</span> <span class="kd">extends</span> <span class="nc">BaseService</span><span class="o">&lt;</span><span class="nc">UserMapper</span><span class="o">,</span> <span class="nc">User</span><span class="o">&gt;</span> <span class="o">{</span>
    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">RedisUtil</span> <span class="n">redisUtil</span><span class="o">;</span>
    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">BCryptPasswordEncoder</span> <span class="n">bCryptPasswordEncoder</span><span class="o">;</span>
    <span class="nd">@Autowired</span>
    <span class="kd">private</span> <span class="nc">JwtTokenUtil</span> <span class="n">jwtTokenUtil</span><span class="o">;</span>
    <span class="nd">@Value</span><span class="o">(</span><span class="s">"${jwt.access_token:#{30*24*60*60}}"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">Long</span> <span class="n">access_token_expiration</span><span class="o">;</span>

    <span class="nd">@Autowired</span>
    <span class="nc">AuthenticationManager</span> <span class="n">authenticationManager</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nc">MsgResponseBody</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">upUser</span><span class="o">(</span><span class="nc">Long</span> <span class="n">userId</span><span class="o">,</span> <span class="nc">User</span> <span class="n">user</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">user</span><span class="o">.</span><span class="na">setTid</span><span class="o">(</span><span class="n">userId</span><span class="o">);</span>
        <span class="n">updateByPrimaryKeySelective</span><span class="o">(</span><span class="n">user</span><span class="o">);</span>
        <span class="k">return</span> <span class="nc">MsgResponseBody</span><span class="o">.</span><span class="na">success</span><span class="o">().</span><span class="na">setResult</span><span class="o">(</span><span class="s">"Áî®Êà∑Êõ¥Êñ∞ÊàêÂäü!"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Transactional</span><span class="o">(</span><span class="n">rollbackFor</span> <span class="o">=</span> <span class="nc">Exception</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
    <span class="kd">public</span> <span class="nc">MsgResponseBody</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">dblUser</span><span class="o">(</span><span class="nc">Long</span> <span class="n">userId</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">User</span> <span class="n">user</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">User</span><span class="o">();</span>
        <span class="n">user</span><span class="o">.</span><span class="na">setStatus</span><span class="o">(</span><span class="nc">SenUnitDic</span><span class="o">.</span><span class="na">USER_STATUS_DBL</span><span class="o">);</span>
        <span class="n">user</span><span class="o">.</span><span class="na">setTid</span><span class="o">(</span><span class="n">userId</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">updateByPrimaryKeySelective</span><span class="o">(</span><span class="n">user</span><span class="o">);</span>
        <span class="nc">UserRole</span> <span class="n">userRole</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">UserRole</span><span class="o">();</span>
        <span class="n">userRole</span><span class="o">.</span><span class="na">setUserId</span><span class="o">(</span><span class="n">userId</span><span class="o">);</span>
        <span class="n">userRole</span><span class="o">.</span><span class="na">setStatus</span><span class="o">(</span><span class="nc">SenUnitDic</span><span class="o">.</span><span class="na">USER_STATUS_DBL</span><span class="o">);</span>
        <span class="k">return</span> <span class="nc">MsgResponseBody</span><span class="o">.</span><span class="na">success</span><span class="o">().</span><span class="na">setResult</span><span class="o">(</span><span class="s">"Áî®Êà∑Á¶ÅÁî®ÊàêÂäü!"</span><span class="o">);</span>
    <span class="o">}</span>


    <span class="kd">public</span> <span class="nc">PageResponse</span><span class="o">&lt;</span><span class="nc">User</span><span class="o">&gt;</span> <span class="nf">searchListUser</span><span class="o">(</span><span class="nc">UserListQueryRequest</span> <span class="n">userRequest</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">PageHelper</span><span class="o">.</span><span class="na">startPage</span><span class="o">(</span><span class="n">userRequest</span><span class="o">.</span><span class="na">getPageIndex</span><span class="o">(),</span> <span class="n">userRequest</span><span class="o">.</span><span class="na">getPageSize</span><span class="o">());</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">User</span><span class="o">&gt;</span> <span class="n">userList</span> <span class="o">=</span> <span class="n">selectListAll</span><span class="o">();</span>
        <span class="nc">PageInfo</span><span class="o">&lt;</span><span class="nc">User</span><span class="o">&gt;</span> <span class="n">pageInfo</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">PageInfo</span><span class="o">&lt;</span><span class="nc">User</span><span class="o">&gt;(</span><span class="n">userList</span><span class="o">);</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nf">PageResponse</span><span class="o">(</span><span class="n">pageInfo</span><span class="o">);</span>

    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sample</span><span class="o">()</span> <span class="o">{</span>
        <span class="c1">//Ëé∑Âèñspring‰∏ä‰∏ãÊñá</span>
        <span class="nc">WebApplicationContext</span> <span class="n">wac</span> <span class="o">=</span> <span class="o">(</span><span class="nc">WebApplicationContext</span><span class="o">)</span> <span class="nc">SpringUtil</span><span class="o">.</span><span class="na">getApplicationContext</span><span class="o">();</span>
        <span class="c1">//Ëé∑ÂèñËØ∑Ê±Ç‰∏ä‰∏ãÊñá</span>
        <span class="nc">HttpServletRequest</span> <span class="n">httpRequest</span> <span class="o">=</span> <span class="o">((</span><span class="nc">ServletRequestAttributes</span><span class="o">)</span> <span class="nc">RequestContextHolder</span><span class="o">.</span><span class="na">currentRequestAttributes</span><span class="o">()).</span><span class="na">getRequest</span><span class="o">();</span>
        <span class="nc">ServletContext</span> <span class="n">sc</span> <span class="o">=</span> <span class="n">httpRequest</span><span class="o">.</span><span class="na">getServletContext</span><span class="o">();</span>
        <span class="c1">//Ëé∑ÂèñÂìçÂ∫î‰∏ä‰∏ãÊñá</span>
        <span class="nc">HttpServletResponse</span> <span class="n">httpResponse</span> <span class="o">=</span> <span class="o">((</span><span class="nc">ServletRequestAttributes</span><span class="o">)</span> <span class="nc">RequestContextHolder</span><span class="o">.</span><span class="na">currentRequestAttributes</span><span class="o">()).</span><span class="na">getResponse</span><span class="o">();</span>
        <span class="c1">//Ëé∑ÂèñÁî®Êà∑ÁôªÈôÜÂêéÁöÑ‰ø°ÊÅØ</span>
        <span class="nc">UserAuthInfoUtils</span><span class="o">.</span><span class="na">getUser</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">register</span><span class="o">(</span><span class="nc">UserVo</span> <span class="n">userVo</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Example</span> <span class="n">example</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Example</span><span class="o">(</span><span class="nc">User</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
        <span class="n">example</span><span class="o">.</span><span class="na">createCriteria</span><span class="o">().</span><span class="na">andEqualTo</span><span class="o">(</span><span class="s">"loginName"</span><span class="o">,</span> <span class="n">userVo</span><span class="o">.</span><span class="na">getAccountname</span><span class="o">()).</span><span class="na">orEqualTo</span><span class="o">(</span><span class="s">"mobile"</span><span class="o">,</span> <span class="n">userVo</span><span class="o">.</span><span class="na">getUserPhone</span><span class="o">());</span>
        <span class="nc">RedisLock</span><span class="o">.</span><span class="na">tryLock</span><span class="o">(</span><span class="n">userVo</span><span class="o">.</span><span class="na">getAccountname</span><span class="o">());</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">User</span><span class="o">&gt;</span> <span class="n">userList</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">selectByExample</span><span class="o">(</span><span class="n">example</span><span class="o">);</span>
        <span class="nc">RedisLock</span><span class="o">.</span><span class="na">unLock</span><span class="o">(</span><span class="n">userVo</span><span class="o">.</span><span class="na">getAccountname</span><span class="o">());</span>
        <span class="k">if</span> <span class="o">(!</span><span class="nc">ScUtils</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">(</span><span class="n">userList</span><span class="o">))</span> <span class="o">{</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">SenUnitException</span><span class="o">(</span><span class="nc">SenUnitDic</span><span class="o">.</span><span class="na">RESULT_CODE_SERVICE_UNAVAILABLE</span><span class="o">,</span> <span class="s">"Ë¥¶Êà∑Â∑≤Â≠òÂú®!"</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="nc">User</span> <span class="n">users</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">User</span><span class="o">();</span>
        <span class="n">users</span><span class="o">.</span><span class="na">setLoginName</span><span class="o">(</span><span class="n">userVo</span><span class="o">.</span><span class="na">getAccountname</span><span class="o">());</span>
        <span class="n">users</span><span class="o">.</span><span class="na">setPassWord</span><span class="o">(</span><span class="n">bCryptPasswordEncoder</span><span class="o">.</span><span class="na">encode</span><span class="o">(</span><span class="n">userVo</span><span class="o">.</span><span class="na">getPassword</span><span class="o">()));</span>
        <span class="n">users</span><span class="o">.</span><span class="na">setMobile</span><span class="o">(</span><span class="n">userVo</span><span class="o">.</span><span class="na">getUserPhone</span><span class="o">());</span>
        <span class="n">users</span><span class="o">.</span><span class="na">setStatus</span><span class="o">(</span><span class="s">"EBL"</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">insert</span><span class="o">(</span><span class="n">users</span><span class="o">);</span>
    <span class="o">}</span>


    <span class="cm">/**
     * Áî®Êà∑ÁôªÈôÜÁõ∏ÂÖ≥,‰∏ªË¶ÅÈ™åËØÅÁî®Êà∑Áî®Êà∑ÂØÜÁ†Å‰ª•ÂèäËÆæÁΩÆjwtÂíåÁî®Êà∑ÁºìÂ≠òÁõ∏ÂÖ≥,Âπ∂ËøîÂõûjwtÁöÑÂá≠ËØÅ
     *
     * @param userVo
     * @return
     */</span>
    <span class="kd">public</span> <span class="nc">MsgResponseBody</span><span class="o">&lt;</span><span class="nc">JWTUserDetail</span><span class="o">&gt;</span> <span class="nf">login</span><span class="o">(</span><span class="nc">UserVo</span> <span class="n">userVo</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">User</span> <span class="n">user</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">User</span><span class="o">();</span>
        <span class="n">user</span><span class="o">.</span><span class="na">setLoginName</span><span class="o">(</span><span class="n">userVo</span><span class="o">.</span><span class="na">getAccountname</span><span class="o">());</span>
        <span class="nc">User</span> <span class="n">userOne</span> <span class="o">=</span> <span class="n">selectOne</span><span class="o">(</span><span class="n">user</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="nc">ObjectUtils</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">(</span><span class="n">userOne</span><span class="o">))</span> <span class="o">{</span>
            <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"Áî®Êà∑‰∏çÂ≠òÂú®!"</span><span class="o">);</span>
            <span class="k">return</span> <span class="nc">MsgResponseBody</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="nc">ErrorCodeEnum</span><span class="o">.</span><span class="na">LOGIN_INCORRECT</span><span class="o">.</span><span class="na">getCode</span><span class="o">()).</span><span class="na">setResult</span><span class="o">(</span><span class="nc">ErrorCodeEnum</span><span class="o">.</span><span class="na">LOGIN_INCORRECT</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
        <span class="o">}</span>
        <span class="k">if</span> <span class="o">(!</span><span class="n">bCryptPasswordEncoder</span><span class="o">.</span><span class="na">matches</span><span class="o">(</span><span class="n">userVo</span><span class="o">.</span><span class="na">getPassword</span><span class="o">(),</span> <span class="n">userOne</span><span class="o">.</span><span class="na">getPassWord</span><span class="o">()))</span> <span class="o">{</span>
            <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">"Áî®Êà∑ÁôªÈôÜÂØÜÁ†ÅÈîôËØØ!"</span><span class="o">);</span>
            <span class="k">return</span> <span class="nc">MsgResponseBody</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="nc">ErrorCodeEnum</span><span class="o">.</span><span class="na">LOGIN_INCORRECT</span><span class="o">.</span><span class="na">getCode</span><span class="o">()).</span><span class="na">setResult</span><span class="o">(</span><span class="nc">ErrorCodeEnum</span><span class="o">.</span><span class="na">LOGIN_INCORRECT</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
        <span class="o">}</span>
        <span class="nc">Authentication</span> <span class="n">authentication</span> <span class="o">=</span> <span class="n">authenticationManager</span><span class="o">.</span><span class="na">authenticate</span><span class="o">(</span>
                <span class="k">new</span> <span class="nf">UsernamePasswordAuthenticationToken</span><span class="o">(</span>
                        <span class="n">userVo</span><span class="o">.</span><span class="na">getAccountname</span><span class="o">(),</span>
                        <span class="n">userVo</span><span class="o">.</span><span class="na">getPassword</span><span class="o">()</span>
                <span class="o">)</span>
        <span class="o">);</span>
        <span class="nc">SecurityContextHolder</span><span class="o">.</span><span class="na">getContext</span><span class="o">().</span><span class="na">setAuthentication</span><span class="o">(</span><span class="n">authentication</span><span class="o">);</span>
        <span class="c1">//‰ΩøÁî®jwtÁîüÊàêtoken Áî®‰∫éÊùÉÈôêÊïàÈ™å</span>
        <span class="nc">JWTUserDetail</span> <span class="n">jwtUserDetail</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">JWTUserDetail</span><span class="o">();</span>
        <span class="n">jwtUserDetail</span><span class="o">.</span><span class="na">setLoginName</span><span class="o">(</span><span class="n">userOne</span><span class="o">.</span><span class="na">getLoginName</span><span class="o">());</span>
        <span class="n">jwtUserDetail</span><span class="o">.</span><span class="na">setLoginTime</span><span class="o">(</span><span class="k">new</span> <span class="nc">Date</span><span class="o">());</span>
        <span class="n">jwtUserDetail</span><span class="o">.</span><span class="na">setUserId</span><span class="o">(</span><span class="n">userOne</span><span class="o">.</span><span class="na">getTid</span><span class="o">());</span>
        <span class="n">jwtUserDetail</span><span class="o">.</span><span class="na">setUserType</span><span class="o">(</span><span class="nc">JWTUserDetail</span><span class="o">.</span><span class="na">UserType</span><span class="o">.</span><span class="na">User</span><span class="o">);</span>
        <span class="nc">String</span> <span class="n">token</span> <span class="o">=</span> <span class="n">jwtTokenUtil</span><span class="o">.</span><span class="na">generateToken</span><span class="o">(</span><span class="n">jwtUserDetail</span><span class="o">);</span>
        <span class="n">jwtUserDetail</span><span class="o">.</span><span class="na">setJwtToken</span><span class="o">(</span><span class="n">token</span><span class="o">);</span>
        <span class="k">return</span> <span class="nc">MsgResponseBody</span><span class="o">.</span><span class="na">success</span><span class="o">().</span><span class="na">setResult</span><span class="o">(</span><span class="n">jwtUserDetail</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">logout</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">redisUtil</span><span class="o">.</span><span class="na">setEx</span><span class="o">(</span><span class="nc">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="nc">JwtTokenUtil</span><span class="o">.</span><span class="na">JWT_TOKEN_PREFIX</span><span class="o">,</span> <span class="nc">UserAuthInfoUtils</span><span class="o">.</span><span class="na">getUserType</span><span class="o">(),</span> <span class="nc">UserAuthInfoUtils</span><span class="o">.</span><span class="na">getUserId</span><span class="o">()),</span> <span class="nc">UserAuthInfoUtils</span><span class="o">.</span><span class="na">getUser</span><span class="o">().</span><span class="na">getJwtToken</span><span class="o">(),</span> <span class="n">access_token_expiration</span><span class="o">,</span> <span class="nc">TimeUnit</span><span class="o">.</span><span class="na">SECONDS</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">javaniuniu</span><span class="o">.</span><span class="na">scshorlsweb</span><span class="o">.</span><span class="na">system</span><span class="o">.</span><span class="na">config</span><span class="o">.</span><span class="na">jwt</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.alibaba.fastjson.JSONObject</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">lombok.Data</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">lombok.EqualsAndHashCode</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.Serializable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span>

<span class="nd">@EqualsAndHashCode</span><span class="o">(</span><span class="n">callSuper</span> <span class="o">=</span> <span class="kc">false</span><span class="o">)</span>
<span class="nd">@Data</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">JWTUserDetail</span> <span class="kd">implements</span> <span class="nc">Serializable</span> <span class="o">{</span>
    <span class="cm">/**
     * ÁôªÈôÜÁî®Êà∑ÁºñÂè∑
     */</span>
    <span class="kd">private</span> <span class="kt">long</span> <span class="n">userId</span><span class="o">;</span>
    <span class="cm">/**
     * ÁôªÈôÜÁî®Êà∑Ë¥¶Êà∑ÂêçÁß∞(ÂèØËÉΩ‰∏∫ÊâãÊú∫Âè∑ÈÇÆÁÆ±ÊàñËÄÖÂêçÁß∞Áî®Êà∑Áª¥Â∫¶ÂîØ‰∏Ä)
     */</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">loginName</span><span class="o">;</span>
    <span class="cm">/**
     * ÁôªÈôÜÁî®Êà∑Á±ªÂûã
     */</span>
    <span class="kd">private</span> <span class="nc">UserType</span> <span class="n">userType</span><span class="o">;</span>
    <span class="cm">/**
     * ÁôªÈôÜÁî®Êà∑Âá≠ËØÅ
     */</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">jwtToken</span><span class="o">;</span>
    <span class="cm">/**
     * ÁôªÈôÜÊó∂Èó¥
     */</span>
    <span class="kd">private</span> <span class="nc">Date</span> <span class="n">loginTime</span><span class="o">;</span>

    <span class="kd">public</span> <span class="kd">enum</span> <span class="nc">UserType</span> <span class="o">{</span>
        <span class="nc">User</span><span class="o">(</span><span class="s">"USER"</span><span class="o">,</span> <span class="mi">1</span><span class="o">),</span>
        <span class="nc">Operator</span><span class="o">(</span><span class="s">"OPT"</span><span class="o">,</span> <span class="mi">2</span><span class="o">),</span>
        <span class="nc">Erp</span><span class="o">(</span><span class="s">"ERP"</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>

        <span class="kd">private</span> <span class="nc">String</span> <span class="n">name</span><span class="o">;</span>
        <span class="kd">private</span> <span class="kt">int</span> <span class="n">index</span><span class="o">;</span>

        <span class="kd">private</span> <span class="nf">UserType</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">,</span> <span class="kt">int</span> <span class="n">index</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
            <span class="k">this</span><span class="o">.</span><span class="na">index</span> <span class="o">=</span> <span class="n">index</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="nc">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">getName</span><span class="o">(</span><span class="kt">int</span> <span class="n">index</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">for</span> <span class="o">(</span><span class="nc">UserType</span> <span class="n">c</span> <span class="o">:</span> <span class="nc">UserType</span><span class="o">.</span><span class="na">values</span><span class="o">())</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">c</span><span class="o">.</span><span class="na">getIndex</span><span class="o">()</span> <span class="o">==</span> <span class="n">index</span><span class="o">)</span> <span class="o">{</span>
                    <span class="k">return</span> <span class="n">c</span><span class="o">.</span><span class="na">getName</span><span class="o">();</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">name</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getIndex</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">index</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">JWTUserDetail</span> <span class="nf">fromJson</span><span class="o">(</span><span class="nc">String</span> <span class="n">json</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="nc">JSONObject</span><span class="o">.</span><span class="na">parseObject</span><span class="o">(</span><span class="n">json</span><span class="o">,</span> <span class="nc">JWTUserDetail</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">toJson</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="nc">JSONObject</span><span class="o">.</span><span class="na">toJSONString</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p><a href="https://github.com/Senssic/sc-whorl/tree/master/sc-whorl-web/src/main/java/sc/whorl/system/config/jwt">ÂèÇËÄÉÈìæÊé•</a></p>
:ET