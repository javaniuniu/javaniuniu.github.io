I"<ul>
  <li>addInitParameter 方法使示例1
```java
/**</li>
  <li>注册一个StatViewServlet</li>
  <li>@return
 <em>/
@Bean
public ServletRegistrationBean DruidStatViewServle() {
 // org.springframework.boot.context.embedded.ServletRegistrationBean提供类的进行注册.
 ServletRegistrationBean servletRegistrationBean = new ServletRegistrationBean(new StatViewServlet(),
         “/druid/</em>”);
 // 添加初始化参数：initParams
 // 白名单：
 servletRegistrationBean.addInitParameter(“allow”, “127.0.0.1”);
 // IP黑名单 (存在共同时，deny优先于allow) : 如果满足deny的话提示:Sorry, you are not
 // permitted to view this page.
 servletRegistrationBean.addInitParameter(“deny”, “192.168.1.73”);
 // 登录查看信息的账号密码.
 servletRegistrationBean.addInitParameter(“loginUsername”, “admin”);
 servletRegistrationBean.addInitParameter(“loginPassword”, “123456”);
 // 是否能够重置数据.
 servletRegistrationBean.addInitParameter(“resetEnable”, “true”);
 return servletRegistrationBean;
}
```</li>
  <li>addInitParameter 方法使示例2
```java
/**</li>
  <li>注册一个：filterRegistrationBean</li>
  <li>@return
 <em>/
@Bean
public FilterRegistrationBean druidStatFilter() {
 FilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean(new WebStatFilter());
 // 添加过滤规则.
 filterRegistrationBean.addUrlPatterns(“/</em>”);
 // 添加忽略的格式信息.
 filterRegistrationBean.addInitParameter(“exclusions”, “<em>.js,</em>.gif,<em>.jpg,</em>.png,<em>.css,</em>.ico,/druid/*”);
 return filterRegistrationBean;
}
```</li>
  <li>addUrlPatterns 方法使示例1
    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">registration</span><span class="o">.</span><span class="na">addUrlPatterns</span><span class="o">(</span><span class="s">"/*"</span><span class="o">);</span><span class="err">过滤应用程序中所有资源</span><span class="o">,</span><span class="err">当前应用程序根下的所有文件包括多级子目录下的所有文件，注意这里</span><span class="o">*</span><span class="err">前有“</span><span class="o">/</span><span class="err">”</span>
<span class="n">registration</span><span class="o">.</span><span class="na">addUrlPatterns</span><span class="o">(</span><span class="s">".html"</span><span class="o">);</span><span class="err">过滤指定的类型文件资源</span><span class="o">,</span> <span class="err">当前应用程序根目录下的所有</span><span class="n">html</span><span class="err">文件，注意：</span><span class="o">*.</span><span class="na">html</span><span class="err">前没有“</span><span class="o">/</span><span class="err">”</span><span class="o">,</span><span class="err">否则错误</span>
<span class="n">registration</span><span class="o">.</span><span class="na">addUrlPatterns</span><span class="o">(</span><span class="s">"/folder_name/*"</span><span class="o">);</span><span class="err">过滤指定的目录下的所有文件</span><span class="o">,</span><span class="err">当前应用程序根目录下的</span><span class="n">folder_name</span><span class="err">子目录（可以是多级子目录）下所有文件</span>
<span class="n">registration</span><span class="o">.</span><span class="na">addUrlPatterns</span><span class="o">(</span><span class="s">"/index.html"</span><span class="o">);</span><span class="err">过滤指定文件</span>
</code></pre></div>    </div>
  </li>
</ul>
:ET