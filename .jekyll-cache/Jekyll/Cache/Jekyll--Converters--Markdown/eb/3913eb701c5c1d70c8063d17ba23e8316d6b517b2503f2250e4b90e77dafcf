I"f<h2 id="题目-链表的中间结点">题目 <a href="https://leetcode-cn.com/problems/middle-of-the-linked-list/">链表的中间结点</a></h2>
<p>给定一个带有头结点 head 的非空单链表，返回链表的中间结点。</p>

<p>如果有两个中间结点，则返回第二个中间结点。</p>

<h2 id="示例">示例</h2>

<h3 id="示例-1">示例 1：</h3>

<p>输入：[1,2,3,4,5]  <br />
输出：此列表中的结点 3 (序列化形式：[3,4,5])  <br />
返回的结点值为 3 。 (测评系统对该结点序列化表述是 [3,4,5])。 <br />
注意，我们返回了一个 ListNode 类型的对象 ans，这样： <br />
ans.val = 3, ans.next.val = 4, ans.next.next.val = 5, 以及 ans.next.next.next = NULL.</p>
<h3 id="示例2">示例 2：</h3>

<p>输入：[1,2,3,4,5,6]  <br />
输出：此列表中的结点 4 (序列化形式：[4,5,6])  <br />
由于该列表有两个中间结点，值分别为 3 和 4，我们返回第二个结点。  <br />
 </p>

<p>提示：</p>

<p>给定链表的结点数介于 1 和 100 之间。</p>

<h2 id="官方解题思路">官方解题思路</h2>
<h3 id="方法一数组">方法一：数组</h3>
<p>思路和算法</p>

<p>链表的缺点在于不能通过下标访问对应的元素。因此我们可以考虑对链表进行遍历，同时将遍历到的元素依次放入数组 A 中。如果我们遍历到了 N 个元素，那么链表以及数组的长度也为 N，对应的中间节点即为 A[N/2]。</p>

<h2 id="官方代码">官方代码</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="nc">ListNode</span> <span class="nf">middleNode</span><span class="o">(</span><span class="nc">ListNode</span> <span class="n">head</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">ListNode</span><span class="o">[]</span> <span class="no">A</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ListNode</span><span class="o">[</span><span class="mi">100</span><span class="o">];</span>
        <span class="kt">int</span> <span class="n">t</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">while</span> <span class="o">(</span><span class="n">head</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="no">A</span><span class="o">[</span><span class="n">t</span><span class="o">++]</span> <span class="o">=</span> <span class="n">head</span><span class="o">;</span>
            <span class="n">head</span> <span class="o">=</span> <span class="n">head</span><span class="o">.</span><span class="na">next</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="no">A</span><span class="o">[</span><span class="n">t</span> <span class="o">/</span> <span class="mi">2</span><span class="o">];</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="复杂度分析">复杂度分析</h2>
<ul>
  <li>时间复杂度：O(N)，其中 NN 是给定链表中的结点数目。</li>
  <li>空间复杂度：O(N)，即数组 A 用去的空间。</li>
</ul>
:ET