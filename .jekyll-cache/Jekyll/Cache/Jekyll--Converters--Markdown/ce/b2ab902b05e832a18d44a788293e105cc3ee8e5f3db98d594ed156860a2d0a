I"=<p><strong>默认实现SimpleGrantedAuthority</strong></p>
<h4 id="grantedauthority接口">GrantedAuthority接口</h4>
<p>我们知道UserDeitails接口里面有一个getAuthorities()方法。这个方法将返回此用户的所拥有的权限。这个集合将用于用户的访问控制，也就是Authorization。</p>

<p>所谓权限，就是一个字符串。一般不会重复。</p>

<p>所谓权限检查，就是查看用户权限列表中是否含有匹配的字符串。</p>

<p>复制代码
package org.springframework.security.core;</p>

<p>import java.io.Serializable;</p>

<p>public interface GrantedAuthority extends Serializable {
    String getAuthority();
}
复制代码
“角色”如何表示？与Shiro有何不同？</p>

<p>在Security中，角色和权限共用GrantedAuthority接口，唯一的不同角色就是多了个前缀”ROLE_“，而且它没有Shiro的那种从属关系，即一个角色包含哪些权限等等。在Security看来角色和权限时一样的，它认证的时候，把所有权限（角色、权限）都取出来，而不是分开验证。</p>

<p>所以，在Security提供的UserDetailsService默认实现JdbcDaoImpl中，角色和权限都存储在auhtorities表中。而不是像Shiro那样，角色有个roles表，权限有个permissions表。以及相关的管理表等等。</p>

<p>GrantedAuthority接口的默认实现SimpleGrantedAuthority</p>

<p>复制代码
package org.springframework.security.core.authority;</p>

<p>import org.springframework.security.core.GrantedAuthority;
import org.springframework.util.Assert;</p>

<p>public final class SimpleGrantedAuthority implements GrantedAuthority {
    private static final long serialVersionUID = 500L;
    private final String role;</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>public SimpleGrantedAuthority(String role) {
    Assert.hasText(role, "A granted authority textual representation is required");
    this.role = role;
}

public String getAuthority() {
    return this.role;
}

public boolean equals(Object obj) {
    if (this == obj) {
        return true;
    } else {
        return obj instanceof SimpleGrantedAuthority ? this.role.equals(((SimpleGrantedAuthority)obj).role) : false;
    }
}

public int hashCode() {
    return this.role.hashCode();
}

public String toString() {
    return this.role;
} } 复制代码 注意，在构建SimpleGrantedAuthority对象的时候，它没有添加任何前缀。所以表示"角色"的权限，在数据库中就带有"ROLE_"前缀了。所以authorities表中的视图可能是这样的。 ![图片pic1](/assets/images/java_code_design/52017893333_2.gif)
</code></pre></div></div>

<p><img src="/assets/images/java_code_design/52017893333_2.gif" alt="图片pic2" />
<img src="/assets/images/java_code_design/52017893333_2.gif" alt="图片pic3" /></p>
:ET