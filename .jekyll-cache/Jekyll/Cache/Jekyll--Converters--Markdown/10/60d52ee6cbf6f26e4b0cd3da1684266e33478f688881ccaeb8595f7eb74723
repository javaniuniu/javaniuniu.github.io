I"ÔG<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//</span>
<span class="c1">// Source code recreated from a .class file by IntelliJ IDEA</span>
<span class="c1">// (powered by Fernflower decompiler)</span>
<span class="c1">//</span>

<span class="kn">package</span> <span class="nn">org.springframework.http</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.Serializable</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.net.URI</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.nio.charset.Charset</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.text.ParseException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.text.SimpleDateFormat</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collection</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.EnumSet</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Iterator</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.LinkedHashMap</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.LinkedList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Locale</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Set</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.TimeZone</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Map.Entry</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.util.Assert</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.util.LinkedCaseInsensitiveMap</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.util.MultiValueMap</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.util.StringUtils</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">HttpHeaders</span> <span class="kd">implements</span> <span class="nc">MultiValueMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">String</span><span class="o">&gt;,</span> <span class="nc">Serializable</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">long</span> <span class="n">serialVersionUID</span> <span class="o">=</span> <span class="o">-</span><span class="mi">8578554704772377436L</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">ACCEPT</span> <span class="o">=</span> <span class="s">"Accept"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">ACCEPT_CHARSET</span> <span class="o">=</span> <span class="s">"Accept-Charset"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">ACCEPT_ENCODING</span> <span class="o">=</span> <span class="s">"Accept-Encoding"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">ACCEPT_LANGUAGE</span> <span class="o">=</span> <span class="s">"Accept-Language"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">ACCEPT_RANGES</span> <span class="o">=</span> <span class="s">"Accept-Ranges"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">AGE</span> <span class="o">=</span> <span class="s">"Age"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">ALLOW</span> <span class="o">=</span> <span class="s">"Allow"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">AUTHORIZATION</span> <span class="o">=</span> <span class="s">"Authorization"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">CACHE_CONTROL</span> <span class="o">=</span> <span class="s">"Cache-Control"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">CONNECTION</span> <span class="o">=</span> <span class="s">"Connection"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">CONTENT_ENCODING</span> <span class="o">=</span> <span class="s">"Content-Encoding"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">CONTENT_DISPOSITION</span> <span class="o">=</span> <span class="s">"Content-Disposition"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">CONTENT_LANGUAGE</span> <span class="o">=</span> <span class="s">"Content-Language"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">CONTENT_LENGTH</span> <span class="o">=</span> <span class="s">"Content-Length"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">CONTENT_LOCATION</span> <span class="o">=</span> <span class="s">"Content-Location"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">CONTENT_RANGE</span> <span class="o">=</span> <span class="s">"Content-Range"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">CONTENT_TYPE</span> <span class="o">=</span> <span class="s">"Content-Type"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">COOKIE</span> <span class="o">=</span> <span class="s">"Cookie"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">DATE</span> <span class="o">=</span> <span class="s">"Date"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">ETAG</span> <span class="o">=</span> <span class="s">"ETag"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">EXPECT</span> <span class="o">=</span> <span class="s">"Expect"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">EXPIRES</span> <span class="o">=</span> <span class="s">"Expires"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">FROM</span> <span class="o">=</span> <span class="s">"From"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">HOST</span> <span class="o">=</span> <span class="s">"Host"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">IF_MATCH</span> <span class="o">=</span> <span class="s">"If-Match"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">IF_MODIFIED_SINCE</span> <span class="o">=</span> <span class="s">"If-Modified-Since"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">IF_NONE_MATCH</span> <span class="o">=</span> <span class="s">"If-None-Match"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">IF_RANGE</span> <span class="o">=</span> <span class="s">"If-Range"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">IF_UNMODIFIED_SINCE</span> <span class="o">=</span> <span class="s">"If-Unmodified-Since"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">LAST_MODIFIED</span> <span class="o">=</span> <span class="s">"Last-Modified"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">LINK</span> <span class="o">=</span> <span class="s">"Link"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">LOCATION</span> <span class="o">=</span> <span class="s">"Location"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">MAX_FORWARDS</span> <span class="o">=</span> <span class="s">"Max-Forwards"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">ORIGIN</span> <span class="o">=</span> <span class="s">"Origin"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">PRAGMA</span> <span class="o">=</span> <span class="s">"Pragma"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">PROXY_AUTHENTICATE</span> <span class="o">=</span> <span class="s">"Proxy-Authenticate"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">PROXY_AUTHORIZATION</span> <span class="o">=</span> <span class="s">"Proxy-Authorization"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">RANGE</span> <span class="o">=</span> <span class="s">"Range"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">REFERER</span> <span class="o">=</span> <span class="s">"Referer"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">RETRY_AFTER</span> <span class="o">=</span> <span class="s">"Retry-After"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">SERVER</span> <span class="o">=</span> <span class="s">"Server"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">SET_COOKIE</span> <span class="o">=</span> <span class="s">"Set-Cookie"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">SET_COOKIE2</span> <span class="o">=</span> <span class="s">"Set-Cookie2"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">TE</span> <span class="o">=</span> <span class="s">"TE"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">TRAILER</span> <span class="o">=</span> <span class="s">"Trailer"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">TRANSFER_ENCODING</span> <span class="o">=</span> <span class="s">"Transfer-Encoding"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">UPGRADE</span> <span class="o">=</span> <span class="s">"Upgrade"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">USER_AGENT</span> <span class="o">=</span> <span class="s">"User-Agent"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">VARY</span> <span class="o">=</span> <span class="s">"Vary"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">VIA</span> <span class="o">=</span> <span class="s">"Via"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">WARNING</span> <span class="o">=</span> <span class="s">"Warning"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span> <span class="no">WWW_AUTHENTICATE</span> <span class="o">=</span> <span class="s">"WWW-Authenticate"</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">String</span><span class="o">[]</span> <span class="no">DATE_FORMATS</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">String</span><span class="o">[]{</span><span class="s">"EEE, dd MMM yyyy HH:mm:ss zzz"</span><span class="o">,</span> <span class="s">"EEE, dd-MMM-yy HH:mm:ss zzz"</span><span class="o">,</span> <span class="s">"EEE MMM dd HH:mm:ss yyyy"</span><span class="o">};</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">TimeZone</span> <span class="no">GMT</span> <span class="o">=</span> <span class="nc">TimeZone</span><span class="o">.</span><span class="na">getTimeZone</span><span class="o">(</span><span class="s">"GMT"</span><span class="o">);</span>
    <span class="kd">private</span> <span class="kd">final</span> <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;&gt;</span> <span class="n">headers</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nf">HttpHeaders</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">(</span><span class="k">new</span> <span class="nc">LinkedCaseInsensitiveMap</span><span class="o">(</span><span class="mi">8</span><span class="o">,</span> <span class="nc">Locale</span><span class="o">.</span><span class="na">ENGLISH</span><span class="o">),</span> <span class="kc">false</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="nf">HttpHeaders</span><span class="o">(</span><span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;&gt;</span> <span class="n">headers</span><span class="o">,</span> <span class="kt">boolean</span> <span class="n">readOnly</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Assert</span><span class="o">.</span><span class="na">notNull</span><span class="o">(</span><span class="n">headers</span><span class="o">,</span> <span class="s">"'headers' must not be null"</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">readOnly</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;&gt;</span> <span class="n">map</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedCaseInsensitiveMap</span><span class="o">(</span><span class="n">headers</span><span class="o">.</span><span class="na">size</span><span class="o">(),</span> <span class="nc">Locale</span><span class="o">.</span><span class="na">ENGLISH</span><span class="o">);</span>
            <span class="nc">Iterator</span> <span class="n">var4</span> <span class="o">=</span> <span class="n">headers</span><span class="o">.</span><span class="na">entrySet</span><span class="o">().</span><span class="na">iterator</span><span class="o">();</span>

            <span class="k">while</span><span class="o">(</span><span class="n">var4</span><span class="o">.</span><span class="na">hasNext</span><span class="o">())</span> <span class="o">{</span>
                <span class="nc">Entry</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;&gt;</span> <span class="n">entry</span> <span class="o">=</span> <span class="o">(</span><span class="nc">Entry</span><span class="o">)</span><span class="n">var4</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
                <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">values</span> <span class="o">=</span> <span class="nc">Collections</span><span class="o">.</span><span class="na">unmodifiableList</span><span class="o">((</span><span class="nc">List</span><span class="o">)</span><span class="n">entry</span><span class="o">.</span><span class="na">getValue</span><span class="o">());</span>
                <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">entry</span><span class="o">.</span><span class="na">getKey</span><span class="o">(),</span> <span class="n">values</span><span class="o">);</span>
            <span class="o">}</span>

            <span class="k">this</span><span class="o">.</span><span class="na">headers</span> <span class="o">=</span> <span class="nc">Collections</span><span class="o">.</span><span class="na">unmodifiableMap</span><span class="o">(</span><span class="n">map</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">headers</span> <span class="o">=</span> <span class="n">headers</span><span class="o">;</span>
        <span class="o">}</span>

    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setAccept</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">MediaType</span><span class="o">&gt;</span> <span class="n">acceptableMediaTypes</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"Accept"</span><span class="o">,</span> <span class="nc">MediaType</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">acceptableMediaTypes</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">MediaType</span><span class="o">&gt;</span> <span class="nf">getAccept</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">value</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getFirst</span><span class="o">(</span><span class="s">"Accept"</span><span class="o">);</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">MediaType</span><span class="o">&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="n">value</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">?</span> <span class="nc">MediaType</span><span class="o">.</span><span class="na">parseMediaTypes</span><span class="o">(</span><span class="n">value</span><span class="o">)</span> <span class="o">:</span> <span class="nc">Collections</span><span class="o">.</span><span class="na">emptyList</span><span class="o">();</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">result</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">acceptHeader</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"Accept"</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">acceptHeader</span><span class="o">.</span><span class="na">size</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">value</span> <span class="o">=</span> <span class="nc">StringUtils</span><span class="o">.</span><span class="na">collectionToCommaDelimitedString</span><span class="o">(</span><span class="n">acceptHeader</span><span class="o">);</span>
                <span class="n">result</span> <span class="o">=</span> <span class="nc">MediaType</span><span class="o">.</span><span class="na">parseMediaTypes</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setAcceptCharset</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Charset</span><span class="o">&gt;</span> <span class="n">acceptableCharsets</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">StringBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
        <span class="nc">Iterator</span> <span class="n">iterator</span> <span class="o">=</span> <span class="n">acceptableCharsets</span><span class="o">.</span><span class="na">iterator</span><span class="o">();</span>

        <span class="k">while</span><span class="o">(</span><span class="n">iterator</span><span class="o">.</span><span class="na">hasNext</span><span class="o">())</span> <span class="o">{</span>
            <span class="nc">Charset</span> <span class="n">charset</span> <span class="o">=</span> <span class="o">(</span><span class="nc">Charset</span><span class="o">)</span><span class="n">iterator</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
            <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">charset</span><span class="o">.</span><span class="na">name</span><span class="o">().</span><span class="na">toLowerCase</span><span class="o">(</span><span class="nc">Locale</span><span class="o">.</span><span class="na">ENGLISH</span><span class="o">));</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">iterator</span><span class="o">.</span><span class="na">hasNext</span><span class="o">())</span> <span class="o">{</span>
                <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">", "</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">this</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"Accept-Charset"</span><span class="o">,</span> <span class="n">builder</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Charset</span><span class="o">&gt;</span> <span class="nf">getAcceptCharset</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Charset</span><span class="o">&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">();</span>
        <span class="nc">String</span> <span class="n">value</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getFirst</span><span class="o">(</span><span class="s">"Accept-Charset"</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">value</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">String</span><span class="o">[]</span> <span class="n">tokens</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">",\\s*"</span><span class="o">);</span>
            <span class="nc">String</span><span class="o">[]</span> <span class="n">var4</span> <span class="o">=</span> <span class="n">tokens</span><span class="o">;</span>
            <span class="kt">int</span> <span class="n">var5</span> <span class="o">=</span> <span class="n">tokens</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>

            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">var6</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">var6</span> <span class="o">&lt;</span> <span class="n">var5</span><span class="o">;</span> <span class="o">++</span><span class="n">var6</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">String</span> <span class="n">token</span> <span class="o">=</span> <span class="n">var4</span><span class="o">[</span><span class="n">var6</span><span class="o">];</span>
                <span class="kt">int</span> <span class="n">paramIdx</span> <span class="o">=</span> <span class="n">token</span><span class="o">.</span><span class="na">indexOf</span><span class="o">(</span><span class="mi">59</span><span class="o">);</span>
                <span class="nc">String</span> <span class="n">charsetName</span><span class="o">;</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">paramIdx</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">charsetName</span> <span class="o">=</span> <span class="n">token</span><span class="o">;</span>
                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                    <span class="n">charsetName</span> <span class="o">=</span> <span class="n">token</span><span class="o">.</span><span class="na">substring</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="n">paramIdx</span><span class="o">);</span>
                <span class="o">}</span>

                <span class="k">if</span> <span class="o">(!</span><span class="n">charsetName</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"*"</span><span class="o">))</span> <span class="o">{</span>
                    <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="nc">Charset</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="n">charsetName</span><span class="o">));</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setAllow</span><span class="o">(</span><span class="nc">Set</span><span class="o">&lt;</span><span class="nc">HttpMethod</span><span class="o">&gt;</span> <span class="n">allowedMethods</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"Allow"</span><span class="o">,</span> <span class="nc">StringUtils</span><span class="o">.</span><span class="na">collectionToCommaDelimitedString</span><span class="o">(</span><span class="n">allowedMethods</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">Set</span><span class="o">&lt;</span><span class="nc">HttpMethod</span><span class="o">&gt;</span> <span class="nf">getAllow</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">value</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getFirst</span><span class="o">(</span><span class="s">"Allow"</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="nc">StringUtils</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">(</span><span class="n">value</span><span class="o">))</span> <span class="o">{</span>
            <span class="k">return</span> <span class="nc">EnumSet</span><span class="o">.</span><span class="na">noneOf</span><span class="o">(</span><span class="nc">HttpMethod</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="nc">List</span><span class="o">&lt;</span><span class="nc">HttpMethod</span><span class="o">&gt;</span> <span class="n">allowedMethod</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">(</span><span class="mi">5</span><span class="o">);</span>
            <span class="nc">String</span><span class="o">[]</span> <span class="n">tokens</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">",\\s*"</span><span class="o">);</span>
            <span class="nc">String</span><span class="o">[]</span> <span class="n">var4</span> <span class="o">=</span> <span class="n">tokens</span><span class="o">;</span>
            <span class="kt">int</span> <span class="n">var5</span> <span class="o">=</span> <span class="n">tokens</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>

            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">var6</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">var6</span> <span class="o">&lt;</span> <span class="n">var5</span><span class="o">;</span> <span class="o">++</span><span class="n">var6</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">String</span> <span class="n">token</span> <span class="o">=</span> <span class="n">var4</span><span class="o">[</span><span class="n">var6</span><span class="o">];</span>
                <span class="n">allowedMethod</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="nc">HttpMethod</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">token</span><span class="o">));</span>
            <span class="o">}</span>

            <span class="k">return</span> <span class="nc">EnumSet</span><span class="o">.</span><span class="na">copyOf</span><span class="o">(</span><span class="n">allowedMethod</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setCacheControl</span><span class="o">(</span><span class="nc">String</span> <span class="n">cacheControl</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"Cache-Control"</span><span class="o">,</span> <span class="n">cacheControl</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getCacheControl</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">getFirst</span><span class="o">(</span><span class="s">"Cache-Control"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setConnection</span><span class="o">(</span><span class="nc">String</span> <span class="n">connection</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"Connection"</span><span class="o">,</span> <span class="n">connection</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setConnection</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">connection</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"Connection"</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">toCommaDelimitedString</span><span class="o">(</span><span class="n">connection</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">getConnection</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">getFirstValueAsList</span><span class="o">(</span><span class="s">"Connection"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setContentDispositionFormData</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">,</span> <span class="nc">String</span> <span class="n">filename</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Assert</span><span class="o">.</span><span class="na">notNull</span><span class="o">(</span><span class="n">name</span><span class="o">,</span> <span class="s">"'name' must not be null"</span><span class="o">);</span>
        <span class="nc">StringBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">(</span><span class="s">"form-data; name=\""</span><span class="o">);</span>
        <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">name</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="sc">'"'</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">filename</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">"; filename=\""</span><span class="o">);</span>
            <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">filename</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="sc">'"'</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="k">this</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"Content-Disposition"</span><span class="o">,</span> <span class="n">builder</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setContentLength</span><span class="o">(</span><span class="kt">long</span> <span class="n">contentLength</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"Content-Length"</span><span class="o">,</span> <span class="nc">Long</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">contentLength</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">long</span> <span class="nf">getContentLength</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">value</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getFirst</span><span class="o">(</span><span class="s">"Content-Length"</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">value</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">?</span> <span class="nc">Long</span><span class="o">.</span><span class="na">parseLong</span><span class="o">(</span><span class="n">value</span><span class="o">)</span> <span class="o">:</span> <span class="o">-</span><span class="mi">1L</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setContentType</span><span class="o">(</span><span class="nc">MediaType</span> <span class="n">mediaType</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Assert</span><span class="o">.</span><span class="na">isTrue</span><span class="o">(!</span><span class="n">mediaType</span><span class="o">.</span><span class="na">isWildcardType</span><span class="o">(),</span> <span class="s">"'Content-Type' cannot contain wildcard type '*'"</span><span class="o">);</span>
        <span class="nc">Assert</span><span class="o">.</span><span class="na">isTrue</span><span class="o">(!</span><span class="n">mediaType</span><span class="o">.</span><span class="na">isWildcardSubtype</span><span class="o">(),</span> <span class="s">"'Content-Type' cannot contain wildcard subtype '*'"</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"Content-Type"</span><span class="o">,</span> <span class="n">mediaType</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">MediaType</span> <span class="nf">getContentType</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">value</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getFirst</span><span class="o">(</span><span class="s">"Content-Type"</span><span class="o">);</span>
        <span class="k">return</span> <span class="nc">StringUtils</span><span class="o">.</span><span class="na">hasLength</span><span class="o">(</span><span class="n">value</span><span class="o">)</span> <span class="o">?</span> <span class="nc">MediaType</span><span class="o">.</span><span class="na">parseMediaType</span><span class="o">(</span><span class="n">value</span><span class="o">)</span> <span class="o">:</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setDate</span><span class="o">(</span><span class="kt">long</span> <span class="n">date</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDate</span><span class="o">(</span><span class="s">"Date"</span><span class="o">,</span> <span class="n">date</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">long</span> <span class="nf">getDate</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">getFirstDate</span><span class="o">(</span><span class="s">"Date"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setETag</span><span class="o">(</span><span class="nc">String</span> <span class="n">eTag</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">eTag</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">Assert</span><span class="o">.</span><span class="na">isTrue</span><span class="o">(</span><span class="n">eTag</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="s">"\""</span><span class="o">)</span> <span class="o">||</span> <span class="n">eTag</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="s">"W/"</span><span class="o">),</span> <span class="s">"Invalid eTag, does not start with W/ or \""</span><span class="o">);</span>
            <span class="nc">Assert</span><span class="o">.</span><span class="na">isTrue</span><span class="o">(</span><span class="n">eTag</span><span class="o">.</span><span class="na">endsWith</span><span class="o">(</span><span class="s">"\""</span><span class="o">),</span> <span class="s">"Invalid eTag, does not end with \""</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="k">this</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"ETag"</span><span class="o">,</span> <span class="n">eTag</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getETag</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">getFirst</span><span class="o">(</span><span class="s">"ETag"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setExpires</span><span class="o">(</span><span class="kt">long</span> <span class="n">expires</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDate</span><span class="o">(</span><span class="s">"Expires"</span><span class="o">,</span> <span class="n">expires</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">long</span> <span class="nf">getExpires</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">try</span> <span class="o">{</span>
            <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">getFirstDate</span><span class="o">(</span><span class="s">"Expires"</span><span class="o">);</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">IllegalArgumentException</span> <span class="n">var2</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="o">-</span><span class="mi">1L</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setIfModifiedSince</span><span class="o">(</span><span class="kt">long</span> <span class="n">ifModifiedSince</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDate</span><span class="o">(</span><span class="s">"If-Modified-Since"</span><span class="o">,</span> <span class="n">ifModifiedSince</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="cm">/** @deprecated */</span>
    <span class="nd">@Deprecated</span>
    <span class="kd">public</span> <span class="kt">long</span> <span class="nf">getIfNotModifiedSince</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">getIfModifiedSince</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">long</span> <span class="nf">getIfModifiedSince</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">getFirstDate</span><span class="o">(</span><span class="s">"If-Modified-Since"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setIfNoneMatch</span><span class="o">(</span><span class="nc">String</span> <span class="n">ifNoneMatch</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"If-None-Match"</span><span class="o">,</span> <span class="n">ifNoneMatch</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setIfNoneMatch</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">ifNoneMatchList</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"If-None-Match"</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">toCommaDelimitedString</span><span class="o">(</span><span class="n">ifNoneMatchList</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">protected</span> <span class="nc">String</span> <span class="nf">toCommaDelimitedString</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">list</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">StringBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>
        <span class="nc">Iterator</span> <span class="n">iterator</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="na">iterator</span><span class="o">();</span>

        <span class="k">while</span><span class="o">(</span><span class="n">iterator</span><span class="o">.</span><span class="na">hasNext</span><span class="o">())</span> <span class="o">{</span>
            <span class="nc">String</span> <span class="n">ifNoneMatch</span> <span class="o">=</span> <span class="o">(</span><span class="nc">String</span><span class="o">)</span><span class="n">iterator</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
            <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">ifNoneMatch</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">iterator</span><span class="o">.</span><span class="na">hasNext</span><span class="o">())</span> <span class="o">{</span>
                <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">", "</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">builder</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">getIfNoneMatch</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">getFirstValueAsList</span><span class="o">(</span><span class="s">"If-None-Match"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">protected</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">getFirstValueAsList</span><span class="o">(</span><span class="nc">String</span> <span class="n">header</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">();</span>
        <span class="nc">String</span> <span class="n">value</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getFirst</span><span class="o">(</span><span class="n">header</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">value</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">String</span><span class="o">[]</span> <span class="n">tokens</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">",\\s*"</span><span class="o">);</span>
            <span class="nc">String</span><span class="o">[]</span> <span class="n">var5</span> <span class="o">=</span> <span class="n">tokens</span><span class="o">;</span>
            <span class="kt">int</span> <span class="n">var6</span> <span class="o">=</span> <span class="n">tokens</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>

            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">var7</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">var7</span> <span class="o">&lt;</span> <span class="n">var6</span><span class="o">;</span> <span class="o">++</span><span class="n">var7</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">String</span> <span class="n">token</span> <span class="o">=</span> <span class="n">var5</span><span class="o">[</span><span class="n">var7</span><span class="o">];</span>
                <span class="n">result</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">token</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setLastModified</span><span class="o">(</span><span class="kt">long</span> <span class="n">lastModified</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">setDate</span><span class="o">(</span><span class="s">"Last-Modified"</span><span class="o">,</span> <span class="n">lastModified</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">long</span> <span class="nf">getLastModified</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">getFirstDate</span><span class="o">(</span><span class="s">"Last-Modified"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setLocation</span><span class="o">(</span><span class="no">URI</span> <span class="n">location</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"Location"</span><span class="o">,</span> <span class="n">location</span><span class="o">.</span><span class="na">toASCIIString</span><span class="o">());</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="no">URI</span> <span class="nf">getLocation</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">value</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getFirst</span><span class="o">(</span><span class="s">"Location"</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">value</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">?</span> <span class="no">URI</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">value</span><span class="o">)</span> <span class="o">:</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setOrigin</span><span class="o">(</span><span class="nc">String</span> <span class="n">origin</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"Origin"</span><span class="o">,</span> <span class="n">origin</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getOrigin</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">getFirst</span><span class="o">(</span><span class="s">"Origin"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPragma</span><span class="o">(</span><span class="nc">String</span> <span class="n">pragma</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"Pragma"</span><span class="o">,</span> <span class="n">pragma</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getPragma</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">getFirst</span><span class="o">(</span><span class="s">"Pragma"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setUpgrade</span><span class="o">(</span><span class="nc">String</span> <span class="n">upgrade</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="s">"Upgrade"</span><span class="o">,</span> <span class="n">upgrade</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getUpgrade</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">getFirst</span><span class="o">(</span><span class="s">"Upgrade"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">long</span> <span class="nf">getFirstDate</span><span class="o">(</span><span class="nc">String</span> <span class="n">headerName</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">String</span> <span class="n">headerValue</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">getFirst</span><span class="o">(</span><span class="n">headerName</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">headerValue</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="o">-</span><span class="mi">1L</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="nc">String</span><span class="o">[]</span> <span class="n">var3</span> <span class="o">=</span> <span class="no">DATE_FORMATS</span><span class="o">;</span>
            <span class="kt">int</span> <span class="n">var4</span> <span class="o">=</span> <span class="n">var3</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
            <span class="kt">int</span> <span class="n">var5</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

            <span class="k">while</span><span class="o">(</span><span class="n">var5</span> <span class="o">&lt;</span> <span class="n">var4</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">String</span> <span class="n">dateFormat</span> <span class="o">=</span> <span class="n">var3</span><span class="o">[</span><span class="n">var5</span><span class="o">];</span>
                <span class="nc">SimpleDateFormat</span> <span class="n">simpleDateFormat</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SimpleDateFormat</span><span class="o">(</span><span class="n">dateFormat</span><span class="o">,</span> <span class="nc">Locale</span><span class="o">.</span><span class="na">US</span><span class="o">);</span>
                <span class="n">simpleDateFormat</span><span class="o">.</span><span class="na">setTimeZone</span><span class="o">(</span><span class="no">GMT</span><span class="o">);</span>

                <span class="k">try</span> <span class="o">{</span>
                    <span class="k">return</span> <span class="n">simpleDateFormat</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">headerValue</span><span class="o">).</span><span class="na">getTime</span><span class="o">();</span>
                <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">ParseException</span> <span class="n">var9</span><span class="o">)</span> <span class="o">{</span>
                    <span class="o">++</span><span class="n">var5</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>

            <span class="k">throw</span> <span class="k">new</span> <span class="nf">IllegalArgumentException</span><span class="o">(</span><span class="s">"Cannot parse date value \""</span> <span class="o">+</span> <span class="n">headerValue</span> <span class="o">+</span> <span class="s">"\" for \""</span> <span class="o">+</span> <span class="n">headerName</span> <span class="o">+</span> <span class="s">"\" header"</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setDate</span><span class="o">(</span><span class="nc">String</span> <span class="n">headerName</span><span class="o">,</span> <span class="kt">long</span> <span class="n">date</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">SimpleDateFormat</span> <span class="n">dateFormat</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SimpleDateFormat</span><span class="o">(</span><span class="no">DATE_FORMATS</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="nc">Locale</span><span class="o">.</span><span class="na">US</span><span class="o">);</span>
        <span class="n">dateFormat</span><span class="o">.</span><span class="na">setTimeZone</span><span class="o">(</span><span class="no">GMT</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">set</span><span class="o">(</span><span class="n">headerName</span><span class="o">,</span> <span class="n">dateFormat</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="k">new</span> <span class="nc">Date</span><span class="o">(</span><span class="n">date</span><span class="o">)));</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getFirst</span><span class="o">(</span><span class="nc">String</span> <span class="n">headerName</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">headerValues</span> <span class="o">=</span> <span class="o">(</span><span class="nc">List</span><span class="o">)</span><span class="k">this</span><span class="o">.</span><span class="na">headers</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">headerName</span><span class="o">);</span>
        <span class="k">return</span> <span class="n">headerValues</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">?</span> <span class="o">(</span><span class="nc">String</span><span class="o">)</span><span class="n">headerValues</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">)</span> <span class="o">:</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">add</span><span class="o">(</span><span class="nc">String</span> <span class="n">headerName</span><span class="o">,</span> <span class="nc">String</span> <span class="n">headerValue</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">headerValues</span> <span class="o">=</span> <span class="o">(</span><span class="nc">List</span><span class="o">)</span><span class="k">this</span><span class="o">.</span><span class="na">headers</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">headerName</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">headerValues</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">headerValues</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">();</span>
            <span class="k">this</span><span class="o">.</span><span class="na">headers</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">headerName</span><span class="o">,</span> <span class="n">headerValues</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="o">((</span><span class="nc">List</span><span class="o">)</span><span class="n">headerValues</span><span class="o">).</span><span class="na">add</span><span class="o">(</span><span class="n">headerValue</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">set</span><span class="o">(</span><span class="nc">String</span> <span class="n">headerName</span><span class="o">,</span> <span class="nc">String</span> <span class="n">headerValue</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">headerValues</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">();</span>
        <span class="n">headerValues</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">headerValue</span><span class="o">);</span>
        <span class="k">this</span><span class="o">.</span><span class="na">headers</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">headerName</span><span class="o">,</span> <span class="n">headerValues</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setAll</span><span class="o">(</span><span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">String</span><span class="o">&gt;</span> <span class="n">values</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Iterator</span> <span class="n">var2</span> <span class="o">=</span> <span class="n">values</span><span class="o">.</span><span class="na">entrySet</span><span class="o">().</span><span class="na">iterator</span><span class="o">();</span>

        <span class="k">while</span><span class="o">(</span><span class="n">var2</span><span class="o">.</span><span class="na">hasNext</span><span class="o">())</span> <span class="o">{</span>
            <span class="nc">Entry</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">String</span><span class="o">&gt;</span> <span class="n">entry</span> <span class="o">=</span> <span class="o">(</span><span class="nc">Entry</span><span class="o">)</span><span class="n">var2</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
            <span class="k">this</span><span class="o">.</span><span class="na">set</span><span class="o">((</span><span class="nc">String</span><span class="o">)</span><span class="n">entry</span><span class="o">.</span><span class="na">getKey</span><span class="o">(),</span> <span class="o">(</span><span class="nc">String</span><span class="o">)</span><span class="n">entry</span><span class="o">.</span><span class="na">getValue</span><span class="o">());</span>
        <span class="o">}</span>

    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">Map</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">String</span><span class="o">&gt;</span> <span class="nf">toSingleValueMap</span><span class="o">()</span> <span class="o">{</span>
        <span class="nc">LinkedHashMap</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">String</span><span class="o">&gt;</span> <span class="n">singleValueMap</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedHashMap</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">headers</span><span class="o">.</span><span class="na">size</span><span class="o">());</span>
        <span class="nc">Iterator</span> <span class="n">var2</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">headers</span><span class="o">.</span><span class="na">entrySet</span><span class="o">().</span><span class="na">iterator</span><span class="o">();</span>

        <span class="k">while</span><span class="o">(</span><span class="n">var2</span><span class="o">.</span><span class="na">hasNext</span><span class="o">())</span> <span class="o">{</span>
            <span class="nc">Entry</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;&gt;</span> <span class="n">entry</span> <span class="o">=</span> <span class="o">(</span><span class="nc">Entry</span><span class="o">)</span><span class="n">var2</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
            <span class="n">singleValueMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">entry</span><span class="o">.</span><span class="na">getKey</span><span class="o">(),</span> <span class="o">((</span><span class="nc">List</span><span class="o">)</span><span class="n">entry</span><span class="o">.</span><span class="na">getValue</span><span class="o">()).</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">));</span>
        <span class="o">}</span>

        <span class="k">return</span> <span class="n">singleValueMap</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">size</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">headers</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isEmpty</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">headers</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">containsKey</span><span class="o">(</span><span class="nc">Object</span> <span class="n">key</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">headers</span><span class="o">.</span><span class="na">containsKey</span><span class="o">(</span><span class="n">key</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">containsValue</span><span class="o">(</span><span class="nc">Object</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">headers</span><span class="o">.</span><span class="na">containsValue</span><span class="o">(</span><span class="n">value</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">get</span><span class="o">(</span><span class="nc">Object</span> <span class="n">key</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="o">(</span><span class="nc">List</span><span class="o">)</span><span class="k">this</span><span class="o">.</span><span class="na">headers</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">key</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">put</span><span class="o">(</span><span class="nc">String</span> <span class="n">key</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">value</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="o">(</span><span class="nc">List</span><span class="o">)</span><span class="k">this</span><span class="o">.</span><span class="na">headers</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">key</span><span class="o">,</span> <span class="n">value</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">remove</span><span class="o">(</span><span class="nc">Object</span> <span class="n">key</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="o">(</span><span class="nc">List</span><span class="o">)</span><span class="k">this</span><span class="o">.</span><span class="na">headers</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">key</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">putAll</span><span class="o">(</span><span class="nc">Map</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="nc">String</span><span class="o">,</span> <span class="o">?</span> <span class="kd">extends</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;&gt;</span> <span class="n">map</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">headers</span><span class="o">.</span><span class="na">putAll</span><span class="o">(</span><span class="n">map</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">clear</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">headers</span><span class="o">.</span><span class="na">clear</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">Set</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">keySet</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">headers</span><span class="o">.</span><span class="na">keySet</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">Collection</span><span class="o">&lt;</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;&gt;</span> <span class="nf">values</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">headers</span><span class="o">.</span><span class="na">values</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">Set</span><span class="o">&lt;</span><span class="nc">Entry</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">,</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;&gt;&gt;</span> <span class="nf">entrySet</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">headers</span><span class="o">.</span><span class="na">entrySet</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">equals</span><span class="o">(</span><span class="nc">Object</span> <span class="n">other</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="k">this</span> <span class="o">==</span> <span class="n">other</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(!(</span><span class="n">other</span> <span class="k">instanceof</span> <span class="nc">HttpHeaders</span><span class="o">))</span> <span class="o">{</span>
            <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="nc">HttpHeaders</span> <span class="n">otherHeaders</span> <span class="o">=</span> <span class="o">(</span><span class="nc">HttpHeaders</span><span class="o">)</span><span class="n">other</span><span class="o">;</span>
            <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">headers</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">otherHeaders</span><span class="o">.</span><span class="na">headers</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">hashCode</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">headers</span><span class="o">.</span><span class="na">hashCode</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">headers</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">HttpHeaders</span> <span class="nf">readOnlyHttpHeaders</span><span class="o">(</span><span class="nc">HttpHeaders</span> <span class="n">headers</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nf">HttpHeaders</span><span class="o">(</span><span class="n">headers</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>
:ET