I"Y<h4 id="拦截器与过滤器的区别">拦截器与过滤器的区别</h4>
<p>过滤器可以简单理解为<code class="highlighter-rouge">“取你所想取”</code>，忽视掉那些你不想要的东西；拦截器可以简单理解为“拒你所想拒”，关心你想要拒绝掉哪些东西，比如一个BBS论坛上拦截掉敏感词汇。    <br />
1.拦截器是基于java反射机制的，而过滤器是基于函数回调的。 <br />
2.过滤器依赖于servlet容器，而拦截器不依赖于servlet容器。  <br />
3.拦截器只对action起作用，而过滤器几乎可以对所有请求起作用。  <br />
4.拦截器可以访问action上下文、值栈里的对象，而过滤器不能。 <br />
5.在action的生命周期里，拦截器可以多起调用，而过滤器只能在容器初始化时调用一次。</p>

<ul>
  <li>addInitParameter 方法使示例1</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 * 注册一个StatViewServlet
 * @return
 */</span>
<span class="nd">@Bean</span>
<span class="kd">public</span> <span class="nc">ServletRegistrationBean</span> <span class="nf">DruidStatViewServle</span><span class="o">()</span> <span class="o">{</span>
	<span class="c1">// org.springframework.boot.context.embedded.ServletRegistrationBean提供类的进行注册.</span>
	<span class="nc">ServletRegistrationBean</span> <span class="n">servletRegistrationBean</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ServletRegistrationBean</span><span class="o">(</span><span class="k">new</span> <span class="nc">StatViewServlet</span><span class="o">(),</span>
			<span class="s">"/druid/*"</span><span class="o">);</span>
	<span class="c1">// 添加初始化参数：initParams</span>
	<span class="c1">// 白名单：</span>
	<span class="n">servletRegistrationBean</span><span class="o">.</span><span class="na">addInitParameter</span><span class="o">(</span><span class="s">"allow"</span><span class="o">,</span> <span class="s">"127.0.0.1"</span><span class="o">);</span>
	<span class="c1">// IP黑名单 (存在共同时，deny优先于allow) : 如果满足deny的话提示:Sorry, you are not</span>
	<span class="c1">// permitted to view this page.</span>
	<span class="n">servletRegistrationBean</span><span class="o">.</span><span class="na">addInitParameter</span><span class="o">(</span><span class="s">"deny"</span><span class="o">,</span> <span class="s">"192.168.1.73"</span><span class="o">);</span>
	<span class="c1">// 登录查看信息的账号密码.</span>
	<span class="n">servletRegistrationBean</span><span class="o">.</span><span class="na">addInitParameter</span><span class="o">(</span><span class="s">"loginUsername"</span><span class="o">,</span> <span class="s">"admin"</span><span class="o">);</span>
	<span class="n">servletRegistrationBean</span><span class="o">.</span><span class="na">addInitParameter</span><span class="o">(</span><span class="s">"loginPassword"</span><span class="o">,</span> <span class="s">"123456"</span><span class="o">);</span>
	<span class="c1">// 是否能够重置数据.</span>
	<span class="n">servletRegistrationBean</span><span class="o">.</span><span class="na">addInitParameter</span><span class="o">(</span><span class="s">"resetEnable"</span><span class="o">,</span> <span class="s">"true"</span><span class="o">);</span>
	<span class="k">return</span> <span class="n">servletRegistrationBean</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>addInitParameter 方法使示例2</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 * 注册一个：filterRegistrationBean
 * @return
 */</span>
<span class="nd">@Bean</span>
<span class="kd">public</span> <span class="nc">FilterRegistrationBean</span> <span class="nf">druidStatFilter</span><span class="o">()</span> <span class="o">{</span>
	<span class="nc">FilterRegistrationBean</span> <span class="n">filterRegistrationBean</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FilterRegistrationBean</span><span class="o">(</span><span class="k">new</span> <span class="nc">WebStatFilter</span><span class="o">());</span>
	<span class="c1">// 添加过滤规则.</span>
	<span class="n">filterRegistrationBean</span><span class="o">.</span><span class="na">addUrlPatterns</span><span class="o">(</span><span class="s">"/*"</span><span class="o">);</span>
	<span class="c1">// 添加忽略的格式信息.</span>
	<span class="n">filterRegistrationBean</span><span class="o">.</span><span class="na">addInitParameter</span><span class="o">(</span><span class="s">"exclusions"</span><span class="o">,</span> <span class="s">"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"</span><span class="o">);</span>
	<span class="k">return</span> <span class="n">filterRegistrationBean</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>
<ul>
  <li>addUrlPatterns 方法使示例1</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">registration</span><span class="o">.</span><span class="na">addUrlPatterns</span><span class="o">(</span><span class="s">"/*"</span><span class="o">);</span><span class="err">过滤应用程序中所有资源</span><span class="o">,</span><span class="err">当前应用程序根下的所有文件包括多级子目录下的所有文件，注意这里</span><span class="o">*</span><span class="err">前有“</span><span class="o">/</span><span class="err">”</span>
  <span class="n">registration</span><span class="o">.</span><span class="na">addUrlPatterns</span><span class="o">(</span><span class="s">".html"</span><span class="o">);</span><span class="err">过滤指定的类型文件资源</span><span class="o">,</span> <span class="err">当前应用程序根目录下的所有</span><span class="n">html</span><span class="err">文件，注意：</span><span class="o">*.</span><span class="na">html</span><span class="err">前没有“</span><span class="o">/</span><span class="err">”</span><span class="o">,</span><span class="err">否则错误</span>
  <span class="n">registration</span><span class="o">.</span><span class="na">addUrlPatterns</span><span class="o">(</span><span class="s">"/folder_name/*"</span><span class="o">);</span><span class="err">过滤指定的目录下的所有文件</span><span class="o">,</span><span class="err">当前应用程序根目录下的</span><span class="n">folder_name</span><span class="err">子目录（可以是多级子目录）下所有文件</span>
  <span class="n">registration</span><span class="o">.</span><span class="na">addUrlPatterns</span><span class="o">(</span><span class="s">"/index.html"</span><span class="o">);</span><span class="err">过滤指定文件</span>
</code></pre></div></div>
:ET